
from PySide6.QtWidgets import QWidget, QLabel, QLineEdit, QPushButton, QMessageBox, QTextEdit
from PySide6.QtGui import QPixmap, QPainter
from PySide6.QtCore import Qt
import requests
import os

class SearchWindow(QWidget):
    """
    This "window" is a QWidget. If it has no parent, it
    will appear as a free-floating window as we want.
    """     

    def fetch_pokemon_data(self):
        pokemon_name = self.textbox.text()
        if not pokemon_name:
            QMessageBox.warning(self, "Warning", "Please enter a Pokemon name.")
            return

        url = f"https://pokeapi.co/api/v2/pokemon/{pokemon_name.lower()}"
        response = requests.get(url)

        if response.status_code == 200:
            blank_pixmap = QPixmap(850, 500)
            blank_pixmap.fill(Qt.transparent)
            self.background.setPixmap(blank_pixmap)

            # fetching [dictionaries]

            pokemon_data = response.json()
            abilities = pokemon_data['abilities'] 

            # extracting {data}
            ability_names = [ability['ability']['name'] for ability in abilities]
            abilities_text = ", ".join(ability_names)


            self.display_abilities(abilities_text)
            self.info_display.setPlainText(f"Name: {pokemon_name.title()}\nAbilities: {abilities_text}")
            self.info_display.setStyleSheet("background-color: transparent; border: 0; color: white;")
        
        else:
            QMessageBox.critical(self, "Error", "Failed to fetch data from the API.")

    

    def __init__(self):
        super().__init__()
       
        self.w = None        
        self.setFixedSize(850, 500)

        self.background = QLabel(self)
        self.background.setPixmap(QPixmap("/home/yadukrishnan/Desktop/amFOSS23/Poke-Search/assets/landing.jpg"))
        self.background.setGeometry(0, 0, 850, 500)

        self.textbox = QLineEdit(self)
        self.textbox.move(20, 20) 
        self.textbox.setGeometry(50, 50, 280, 40)

        self.info_display = QTextEdit(self)
        self.info_display.setGeometry(250, 50, 300, 200)
        self.info_display.setReadOnly(True)
    

        label1 = QLabel("Enter the name", self)
        label1.setGeometry(50, 5, 600, 70)

        # stage-01

        enter_button = QPushButton("Search", self)
        enter_button.setGeometry(50, 300, 160, 43)
        enter_button.clicked.connect(self.fetch_pokemon_data)  

        self.info_display = QTextEdit(self)
        self.info_display.setGeometry(250, 50, 300, 200)
        self.info_display.setReadOnly(True)
        self.info_display.setStyleSheet("background-color: transparent; border: 0; color: white;") 
        
        # stage-01

        capture_button = QPushButton("Capture", self)
        capture_button.setGeometry(50, 350, 160, 43)
        # enter_button.clicked.connect(self.download_pokemon_art)  

        display_button = QPushButton("Display", self)
        display_button.setGeometry(50, 400, 160, 43)
        # enter_button.clicked.connect(self.display_pokemon_captures)  




    ## TO-DO ##

    # 1 #
    # Fetch the data from from the API.
    # Display the name, official artwork (image), abilities, types and stats when queried with a Pokémon name.
    # Add the background provided in assets

    # 2 #
    # Capture the Pokémon i.e. download the image.

    # 3 #
    # Display all the Pokémon captured with their respective names using a new window.

if __name__ == "__main__":
    import sys
    from PySide6.QtWidgets import QApplication

    app = QApplication(sys.argv)
    window = SearchWindow()
    window.show()
    sys.exit(app.exec())
